-- Таблица: catalog
/*Для того чтобы добавить в каталог раздел "Бытовая техника" необходимо сделать такой запрос: */
INSERT INTO catalog ("code section", "name section", parent_id) VALUES (1, 'Бытовая техника', NULL);
/*Для того чтобы добавить в каталог дочерний раздел "Товары для дома" раздела "Бытовая техника" необходимо сделать такой запрос: */
INSERT INTO catalog ("code section", "name section", parent_id) VALUES (2, 'Товары для дома', 1);
/*Для того чтобы добавить в каталог дочерний раздел "Умный дом" раздела "Товары для дома" необходимо сделать такой запрос: */
INSERT INTO catalog ("code section", "name section", parent_id) VALUES (3, 'Умный дом', 2);
/*Для того чтобы добавить в каталог раздел "Смартфоны и гаджеты" необходимо сделать такой запрос: */
INSERT INTO catalog ("code section", "name section", parent_id) VALUES (4, ' Смартфоны и гаджеты', NULL);
/*Для того чтобы добавить в каталог дочерний раздел "Смартфоны" раздела ' Смартфоны и гаджеты' необходимо сделать такой запрос: */
INSERT INTO catalog ("code section", "name section", parent_id) VALUES (5, 'Смарфтоны', 4);
/*Для того чтобы добавить в каталог дочерний раздел "Сотовые телефоны" раздела ' Смартфоны и гаджеты' необходимо сделать такой запрос: */
INSERT INTO catalog ("code section", "name section", parent_id) VALUES (6, 'Сотовые телефоны', 4);
/*Для того чтобы добавить в каталог раздел 'Компьютеры' необходимо сделать такой запрос: */
INSERT INTO catalog ("code section", "name section", parent_id) VALUES (7, 'Компьютеры', NULL);
/*Для того чтобы добавить в каталог дочерний раздел "Системные блоки" раздела Компьютеры' необходимо сделать такой запрос: */
INSERT INTO catalog ("code section", "name section", parent_id) VALUES (8, 'Системные блоки', 7);
/*Для того чтобы добавить в каталог дочерний раздел "Комплектующие" раздела 'Компьютеры' необходимо сделать такой запрос: */
INSERT INTO catalog ("code section", "name section", parent_id) VALUES (9, 'Комплектующие', 7);

-- Таблица: client
/*Для добавления клиента Владимиров Григорий Несторович из города Красноярск с некторой служебной информацией воспользуемся запросом: */
INSERT INTO client (sc_id, fio, address, rating) VALUES (1, 'Владимиров Григорий Несторович', 'Красноярск', 3);
/*Для добавления клиента Петров Сидор Владимирович из города Москва с некторой служебной информацией воспользуемся запросом: */
INSERT INTO client (sc_id, fio, address, rating) VALUES (2, 'Петров Сидор Владимирович', 'Москва', 5);
/*Для добавления клиента Васильев Иоанн Дмитриевич из города Воронеж с некторой служебной информацией воспользуемся запросом: */
INSERT INTO client (sc_id, fio, address, rating) VALUES (3, 'Васильев Иоанн Дмитриевич', 'Воронеж', 4);

-- Таблица: description
/*Для добавления товара фирмы "Xiaomi" с некоторым описанием и технической информацией в раздел каталога: "Умный дом" воспользуемся запросом*/
INSERT INTO description (pd_id, text, title, "customer review", "code section") VALUES (1, 'Xiaomi', 'Умный дом', '5', 3);
/*Для добавления товара фирмы "Honor" с некоторым описанием и технической информацией в раздел каталога: "Смартфоны" воспользуемся запросом*/
INSERT INTO description (pd_id, text, title, "customer review", "code section") VALUES (2, 'Honor', 'Смартфоны', '3', 4);
/*Для добавления товара фирмы "BQ" с некоторым описанием и технической информацией в раздел каталога: "Сотовые телефоны" воспользуемся запросом*/
INSERT INTO description (pd_id, text, title, "customer review", "code section") VALUES (3, 'BQ', 'Сотовые телефоны', '4', 4);
/*Для добавления товара фирмы "MSI" с некоторым описанием и технической информацией в раздел каталога: "Системные блоки" воспользуемся запросом*/
INSERT INTO description (pd_id, text, title, "customer review", "code section") VALUES (4, 'MSI', 'Системные блоки', '4', 7);
/*Для добавления товара фирмы "Gigabyte" с некоторым описанием и технической информацией в раздел каталога: "Комплектующие" воспользуемся запросом*/
INSERT INTO description (pd_id, text, title, "customer review", "code section") VALUES (5, 'Gigabyte', 'Комплектующие', '5', 7);

/*ОДИН ДЕНЬ ИЗ ЖИЗНИ МАГАЗИНА*/

/*Завоз товара в магазин: в таблицу экземпляров добавляются id экземпляров привезенных товаров, так же указывается на какое id товара ссылается экземпляр(то есть какая копия товара была привезена), 
поле id заказа остается пустым поскольку пока экземпляр лежит на складе свободным.*/
/*Добавляем экземпляр товара "Xiaomi" на склад, всего экземпляров данного товара: 1 шт */
select "pd_id" from description where text = 'Xiaomi';
INSERT  INTO instance (pi_id, description, "order id") VALUES ('1', '1', NULL);
/*Добавляем экземпляр товара "Xiaomi" на склад, всего экземпляров данного товара: 2 шт */
INSERT  INTO instance (pi_id, description, "order id") VALUES ('2', '1', NULL);
/*Добавляем экземпляр товара "MSI" на склад, всего экземпляров данного товара: 1 шт */
INSERT  INTO instance (pi_id, description, "order id") VALUES ('3', '4', NULL);
/*Добавляем экземпляр товара "MSI" на склад, всего экземпляров данного товара: 2 шт */
INSERT  INTO instance (pi_id, description, "order id") VALUES ('4', '4', NULL);
/*Добавляем экземпляр товара "Gigabyte" на склад, всего экземпляров данного товара: 1 шт */
INSERT  INTO instance (pi_id, description, "order id") VALUES ('5', '5', NULL);

/* Заказ товара пользователем с наличием всех заказанных экземпляров: 
1.Пользователь запросил некоторoе количество товара для заказа, например: 2 шт товара "Xiaomi". 
Мы должны проверить, есть ли у нас такое количество товаров на складе и свободны ли эти товары (не заказал ли кто-то другой данные экземпляры-то есть поле id заказа должно быть пустым). 
Если количество экземпляров товара на складе удовлетворяет потребностям пользователя то можно сделать заказ.*/
--Григорий решил посмотреть каталог товаров сделаем нужный для этого запрос:
select "name section" from catalog where "parent_id" is null;
--Григорий решил посмотреть раздел "Бытовая техника" - сделаем для этого нужный запрос:
select "name section" , "code section" from catalog where "name section" = "Бытовая техника";
--Григорий хочет посмотреть какие разделы содержит "Бытовая техника"
select "name section" from catalog where "parent_id" = 2;
--Григорий хочет посмотреть товары этого раздела:
select text from description where "code section" = 3; 
--Григорий выбирает товар "Xiaomi" и хочет посмотреть отзывы на него: 
select "customer review" from description where "code section" = 3; 
--Григорий хочет посмотреть сколько экземпляров этого товара на складе:
select count(*) from instance where "order id" is null and description = 1; --товара "Xiaomi" на складе 2 штуки 
--Григорий делает заказ на 2 товара "Xiaomi":
insert  into "order" (uo_id, sc_id, "order date", status) values ('1', '1', '12.07.2000', 'Идет оформление');
--Григорий Несторович запросил 2 экземпляра товара "Xiaomi" - следовательно проверяем актуальное количество экземпляров с помощью запроса:
select count(*) from instance where "order id" is null and description = 1; --количество экземпляров совпадает с желанием клиента => оформляем заказ
/*2.После проверки наличия необходимого количества экземпляров на складе пользователь оформляет заказ: 
в таблицу заказа записывается какой-то id заказа, заносится id клиента, дата заказа и состояние заказа: товар зарезервирован и ждет оплаты.*/
--Для того чтобы оформить заказ на Владимирова Григория Несторовича на 12.07.2000 и поставить статус заказа "заказ ждет оплаты" сделаем такой запрос:
update "order" set "status" = 'Заказ ждет оплаты' where "status" = 'Идет оформление' and "uo_id" = 1;
--insert  into "order" (uo_id, sc_id, "order date", status) values ('1', '1', '12.07.2000', 'Заказ ждет оплаты');
/*3.Из таблицы экземпляров берутся те экземпляры, которые не были проданы или зарезервированы и в поле id заказа записывается номер заказа клиента.*/
--Для того чтобы зарезервировать товар для заказа Григория Несторовича воспользуемся запросом:
UPDATE instance SET "order id" = 1 WHERE "order id" is NULL and description = 1;
/*3.После оплаты проданные экземпляры больше не будут доступны для продажи поскольку их поле id заказа будет занято.*/
--Когда Григорий купил 2 экземпляра товара "Xiaomi" мы закрываем наш заказ таким запросом:
UPDATE "order" SET status = "Оплачено" WHERE status = 'Заказ ждет оплаты' and "sc_id" = 1 and "uo_id" = 1;

/*Заказ товара пользователем - желанное количество экземпляров товаров не совпадает с имеющимся количеством на складе*/
--Сидор заказывает комплектующие "Gigabyte"
insert  into "order" (uo_id, sc_id, "order date", status) values ('2', '2', '1.01.2001', 'Оформление заказа');
--Петров Сидор Владимирович захотел заказать 2 экземпляра товара "Gigabyte" проверим с помощью запроса количество экземпляров этого товара
select description from instance where "order id" is null and description = 5; --заказчик попросил 2 штуки товара - на складе его всего лишь 1 шт- значит заказ отменяем
--Чтобы отменить заказ Сидора сделаем такой запрос:
update "order" set "status" = 'Заказ отменен' where "status" = 'Оформление заказа' and "uo_id" = 2;

/* Отмена заказа при оформлении покупки
1.Происходят все действия которые были выше
2.Если клиент решает не брать товар то в таблицу заказа в строку состояния заказа заносится информация "заказ отменен"
3.В таблице экземпляров товара в строку "id заказа" ставится состояние null. Экземпляр считается свободным для продажи другим клиентам.*/
--Васильев Иоанн заказывает комплектующие "Gigabyte"
insert  into "order" (uo_id, sc_id, "order date", status) values ('3', '3', '3.09.2011', 'Оформление заказа');
--Иоанн захотел заказать 1 экземпляр товара "Gigabyte" проверим с помощью запроса количество экземпляров этого товара
select count(*) from instance where "order id" is null and description = 5;
--Резервируются экземпляры товара для Иоанна
UPDATE instance SET "order id" = 3 WHERE "order id" is null and description = 5;
--Поскольку имеется необходимое количество экземпляров товара - Иоанну делается заказ и магазин ждет оплаты 
UPDATE "order" SET "status" = 'Ожидание оплаты' WHERE "status" =  'Оформление заказа' and "uo_id" = 3;
--Иоанн отменяет заказ - тогда статус заказа меняется
UPDATE "order" SET "status" = 'Отмена' WHERE "status" =  'Ожидание оплаты' and "uo_id" = 3;
--и зарезервированные товары снова становятся доступны для других покупателей
UPDATE instance SET "order id" = null WHERE "order id" = 3 and description = 5;
